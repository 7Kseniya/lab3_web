/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'war'
    id "io.freefair.lombok" version "8.4"

}
version '1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    implementation 'jakarta.faces:jakarta.faces-api:4.0.1'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:4.1.0-M1'
    implementation 'com.sun.faces:jsf-api:2.2.20'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    implementation 'org.hibernate:hibernate-core:6.4.0.Final'
    implementation 'org.hibernate:hibernate-entitymanager:6.0.0.Alpha7'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    compileOnly 'jakarta.platform:jakarta.jakartaee-web-api:10.0.0'
    implementation 'org.glassfish:jakarta.faces:4.1.0-M1'


    implementation 'org.postgresql:postgresql:42.7.1'
    implementation 'org.primefaces:primefaces:13.0.3:jakarta'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0-M1'



    // Use JUnit test framework.
testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

